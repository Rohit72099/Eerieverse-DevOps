---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install common packages
  apt:
    name:
      - git
      - curl
      - build-essential
      - nginx
      - python3-apt
      - unzip
    state: present

- name: Add NodeSource (Node 18) and install nodejs
  shell: |
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    apt-get install -y nodejs
  args:
    creates: /usr/bin/node

- name: Ensure app directory exists
  file:
    path: "{{ app_dir }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: "0755"

- name: Clone the application repository (or pull latest)
  git:
    repo: "{{ repo_url }}"
    dest: "{{ app_dir }}"
    version: main
    force: yes
    accept_hostkey: yes
  become_user: "{{ app_user }}"

- name: Install npm dependencies (server)
  npm:
    path: "{{ app_dir }}/server"
    production: yes

- name: Create .env file from vault secrets
  copy:
    dest: "{{ app_dir }}/server/.env"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: '0600'
    content: |
      PORT={{ PORT }}
      DBURL={{ DBURL }}
      SECRET_KEY={{ SECRET_KEY }}
      NODE_ENV={{ NODE_ENV }}

- name: Install pm2 globally
  npm:
    name: pm2
    global: yes
  register: pm2_install

- name: Start application with PM2
  become_user: "{{ app_user }}"
  shell: |
    # kill previous if exists, then start with PM2
    pm2 delete eerieverse || true
    pm2 start {{ app_dir }}/server/index.js --name eerieverse --update-env
    pm2 save
  args:
    executable: /bin/bash

- name: Setup PM2 startup script (systemd)
  command: pm2 startup systemd -u {{ app_user }} --hp /home/{{ app_user }}
  args:
    creates: /etc/systemd/system/pm2-{{ app_user }}.service

- name: Ensure pm2 autostart enabled and saved
  become_user: "{{ app_user }}"
  shell: |
    pm2 save
  args:
    executable: /bin/bash

# Nginx reverse proxy
- name: Upload Nginx site config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/{{ nginx_site_name }}
    owner: root
    group: root
    mode: '0644'

- name: Enable nginx site (symlink)
  file:
    src: /etc/nginx/sites-available/{{ nginx_site_name }}
    dest: /etc/nginx/sites-enabled/{{ nginx_site_name }}
    state: link
    force: yes

- name: Remove default nginx site if present
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Test nginx configuration
  command: nginx -t
  register: nginx_test
  failed_when: nginx_test.rc != 0

- name: Restart nginx
  service:
    name: nginx
    state: restarted
    enabled: yes
